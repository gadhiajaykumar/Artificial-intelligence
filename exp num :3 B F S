Ex. No: 3
AIM:

To write a python program to implement Breadth First Search Algorithm.



ALGORITHM:

STEP 1: Start the program.

STEP 2: Start by putting any one of the graphâ€™s vertices at the back of the queue.

STEP 3: Now take the front item of the queue and add it to the visited list.

STEP 4: Create a list of that vertex's adjacent nodes.

STEP 5: Add those which are not within the visited list to the rear of the queue

STEP 6: Keep continuing steps two and three till the queue is empty.

STEP 7: Compile and execute the program.

STEP 8: Print the result.

STEP 9: End.

PROGRAM:
graph = {
  '5' : ['3','7'],
  '3' : ['2', '4'],
  '7' : ['8'],
  '2' : [],
  '4' : ['8'],
  '8' : []
}

visited = [] # List for visited nodes.
queue = []     #Initialize a queue

def bfs(visited, graph, node): #function for BFS
  visited.append(node)
  queue.append(node)

  while queue:          # Creating loop to visit each node
    m = queue.pop(0) 
    print (m, end = " ") 

    for neighbour in graph[m]:
      if neighbour not in visited:
        visited.append(neighbour)
        queue.append(neighbour)

# Driver Code
print("Following is the Breadth-First Search")
bfs(visited, graph, '5')    # function calling
                           

OUTPUT:






RESULT:
Therefore, the above program to implement Breadth First Search Algorithm is compiled and executed successful
